{"version":3,"sources":["components/Display/Todo/Todo.module.css","components/Header/Header.module.css","components/Display/Display.module.css","components/Display/InputForm/InputForm.module.css","components/Header/Header.js","components/Display/Todo/Todo.js","components/Display/InputForm/InputForm.js","components/Display/Display.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Header","props","className","styles","header","Todo","task","removeTask","index","toggleTask","todo","style","textDecoration","isCompleted","color","tick","type","checked","value","onChange","text","onClick","icon","faTrash","InputForm","addTask","useState","setValue","inputform","onSubmit","e","preventDefault","target","Display","tasks","setTasks","newTasks","splice","display","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gFACAA,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,QAAU,2B,mBCA5BD,EAAOC,QAAU,CAAC,UAAY,+B,4JCIfC,EAHF,SAACC,GAAD,OACT,qBAAKC,UAAWC,IAAOC,OAAvB,uB,gECwBWC,EAtBJ,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAKC,EAAP,EAAOA,WAAYC,EAAnB,EAAmBA,MAAMC,EAAzB,EAAyBA,WAAzB,OACP,sBAAKP,UAAWC,IAAOO,KAAMC,MAAO,CAACC,eAAgBN,EAAKO,YAAc,eAAiB,GACrFC,MAAMR,EAAKO,YAAc,MAAQ,IADrC,UAKI,gCACI,uBACAX,UAAWC,IAAOY,KAClBC,KAAK,WACLC,QAASX,EAAKO,YACdK,MAAOZ,EAAKO,YACZM,SAAU,kBAAMV,EAAWD,MAE9BF,EAAKc,QAIN,wBAAQC,QAAS,kBAAId,EAAWC,IAAhC,SAAwC,cAAC,IAAD,CAAiBc,KAAMC,Y,iBCDxDC,EAlBC,SAAC,GAAa,IAAZC,EAAW,EAAXA,QACd,EAAwBC,mBAAS,IAAjC,mBAAOR,EAAP,KAAcS,EAAd,KAQA,OACA,qBAAKzB,UAAWC,IAAOyB,UAAvB,SACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACGb,IACLO,EAAQP,GACRS,EAAS,MAKT,SACA,uBAAOT,MAAOA,EAAOC,SAAU,SAACW,GAAD,OAAMH,EAASG,EAAEE,OAAOd,eCyBhDe,EArCD,SAAChC,GACX,MAA0ByB,mBAAS,CAC/B,CAAEN,KAAM,cAAeP,aAAa,GACpC,CAAEO,KAAM,qBAAsBP,aAAa,GAC3C,CAAEO,KAAM,kCAAmCP,aAAa,KAH5D,mBAAOqB,EAAP,KAAcC,EAAd,KASQ5B,EAAW,SAACC,GACd,IAAM4B,EAAS,YAAIF,GACnBE,EAASC,OAAO7B,EAAM,GACtB2B,EAASC,IAEP3B,EAAa,SAACD,GAClB,IAAM4B,EAAQ,YAAOF,GACrBE,EAAS5B,GAAOK,aAAeuB,EAAS5B,GAAOK,YAC/CsB,EAASC,IAEb,OACI,sBAAKlC,UAAWC,IAAOmC,QAAvB,UACI,cAAC,EAAD,CAAWb,QAhBH,SAACL,GACb,IAAMgB,EAAS,CAAC,CAAChB,SAAH,mBAAYc,IAC1BC,EAASC,MAgBDF,EAAMK,KAAI,SAACjC,EAAKE,GAAN,OACN,cAAC,EAAD,CAEAA,MAAOA,EACPF,KAAMA,EACNC,WAAYA,EACZE,WAAYA,GAJPD,UClBVgC,MATf,WACE,OACE,sBAAKtC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCKSuC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.91cd0380.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"todo\":\"Todo_todo__14MkB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__JFTiF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"display\":\"Display_display__3514C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputform\":\"InputForm_inputform__171ys\"};","import React from 'react';\r\nimport styles from './Header.module.css';\r\nconst Header=(props)=>(\r\n    <div className={styles.header}>ToDo App</div>\r\n)\r\nexport default Header;","import React from 'react';\r\nimport styles from './Todo.module.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst Todo=({task,removeTask, index,toggleTask})=>(\r\n    <div className={styles.todo} style={{textDecoration: task.isCompleted ? \"line-through\" : \"\",\r\n        color:task.isCompleted ? \"red\" : \"\"\r\n    }}>\r\n         \r\n        \r\n        <div>\r\n            <input\r\n            className={styles.tick}\r\n            type=\"checkbox\"\r\n            checked={task.isCompleted}\r\n            value={task.isCompleted}\r\n            onChange={() => toggleTask(index)}\r\n        />\r\n        {task.text}\r\n            \r\n\r\n        </div>\r\n        <button onClick={()=>removeTask(index)}><FontAwesomeIcon icon={faTrash} /></button>\r\n        \r\n    </div>\r\n)\r\nexport default Todo;","import React,{useState} from 'react';\r\n\r\nimport styles from './InputForm.module.css';\r\n\r\nconst InputForm=({addTask})=>{\r\n    const [value, setValue]=useState(\"\");\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        if (!value) return;\r\n        addTask(value);\r\n        setValue(\"\");\r\n    }\r\n    \r\n    return(\r\n    <div className={styles.inputform}>\r\n        <form onSubmit={handleSubmit}>\r\n        <input value={value} onChange={(e)=> setValue(e.target.value)} />\r\n        </form>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default InputForm;","import React, {useState} from 'react';\r\nimport styles from './Display.module.css';\r\nimport Todo from './Todo/Todo';\r\nimport InputForm from './InputForm/InputForm';\r\nconst Display=(props)=>{\r\n    const [tasks, setTasks] = useState([\r\n        { text: \"Hello World\", isCompleted: false },\r\n        { text: \"Type your thoughts\", isCompleted: false },\r\n        { text: \"They will be stored permanently\", isCompleted: false }\r\n      ]);\r\n      const addTask=(text)=>{\r\n        const newTasks=[{text},...tasks];\r\n        setTasks(newTasks);\r\n      }\r\n      const removeTask=(index)=>{\r\n          const newTasks=[...tasks];\r\n          newTasks.splice(index,1);\r\n          setTasks(newTasks)\r\n      }\r\n      const toggleTask = (index) => {\r\n        const newTasks = [...tasks];\r\n        newTasks[index].isCompleted = !newTasks[index].isCompleted;\r\n        setTasks(newTasks);\r\n      };\r\n    return(\r\n        <div className={styles.display}>\r\n            <InputForm addTask={addTask}/>\r\n            {\r\n                tasks.map((task,index)=>(\r\n                    <Todo\r\n                    key={index}\r\n                    index={index}\r\n                    task={task}\r\n                    removeTask={removeTask}\r\n                    toggleTask={toggleTask}\r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport default Display;","import './App.css';\nimport Header from './components/Header/Header';\nimport Display from './components/Display/Display';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <Display/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}