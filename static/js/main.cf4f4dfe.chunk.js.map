{"version":3,"sources":["components/Tictac/Tictac.module.css","components/Header/Header.module.css","components/Display/Todo/Todo.module.css","components/Display/InputForm/InputForm.module.css","components/Display/Display.module.css","components/Display/Tracker.module.css","components/Tictac/Square/Square.module.css","components/Header/Header.js","components/Display/Todo/Todo.js","components/Display/InputForm/InputForm.js","components/Display/Tracker.js","components/Display/Display.js","components/Tictac/Square/Square.js","components/Tictac/Tictac.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Header","props","Navbar","bg","variant","expand","Container","Brand","style","color","textDecoration","Toggle","aria-controls","Collapse","id","className","styles","navbar","Nav","Link","to","exact","activeClassName","active","Todo","task","removeTask","index","toggleTask","todo","isCompleted","tick","type","checked","value","onChange","text","onClick","icon","faTrash","InputForm","addTask","useState","setValue","inputform","onSubmit","e","preventDefault","input","Form","Control","size","target","Tracker","tracker","totalTasks","doneTasks","Display","tasks","setTasks","newTasks","splice","display","length","filter","map","Square","square","clicked","Tictac","Array","fill","squares","setSquares","turn","setTurn","calculateWinner","lines","i","a","b","c","player","renderSquare","handleClick","slice","winner","tictac","boardRow","Button","backgroundColor","justifyContent","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cf4f4dfe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"tictac\":\"Tictac_tictac__1YHfZ\",\"player\":\"Tictac_player__34AMv\",\"boardRow\":\"Tictac_boardRow__27znU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Header_navbar__Egm1f\",\"active\":\"Header_active__htlWR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todo\":\"Todo_todo__14MkB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputform\":\"InputForm_inputform__171ys\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"display\":\"Display_display__3514C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tracker\":\"Tracker_tracker__2lwq9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"square\":\"Square_square__3GZ-h\"};","import React from 'react';\r\nimport styles from './Header.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {Navbar,Nav, Container} from 'react-bootstrap';\r\nconst Header=(props)=>(\r\n\r\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"md\" >\r\n        <Container>\r\n        <Navbar.Brand style={{color:'white',textDecoration:'none'}} >\r\n                App\r\n            </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\" className={styles.navbar}>\r\n            <Nav className=\"ml-auto\">\r\n            <Nav.Link >\r\n                <NavLink to=\"/TodoApp\" exact activeClassName={styles.active}>\r\n                Todo\r\n                </NavLink>\r\n            </Nav.Link>\r\n            <Nav.Link>\r\n                <NavLink to=\"/TodoApp/tictac\" activeClassName={styles.active}>\r\n                    TicTac\r\n                </NavLink>\r\n            </Nav.Link>\r\n            </Nav>\r\n            </Navbar.Collapse>\r\n        </Container>\r\n  \r\n   \r\n  \r\n</Navbar>\r\n\r\n        //<NavLink  activeClassName={styles.active} exact to=\"/\">ToDo </NavLink>\r\n        //<NavLink  activeClassName={styles.active} to=\"/tictac\">TicTac </NavLink>\r\n    // </div>\r\n)\r\nexport default Header;","import React from 'react';\r\nimport styles from './Todo.module.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst Todo=({task,removeTask, index,toggleTask})=>(\r\n    <div className={styles.todo} style={{textDecoration: task.isCompleted ? \"line-through\" : \"\",\r\n        color:task.isCompleted ? \"rgb(177, 172, 172)\"\r\n        : \"\"\r\n    }}>\r\n         \r\n        \r\n        <div>\r\n            <input\r\n            className={styles.tick}\r\n            type=\"checkbox\"\r\n            checked={task.isCompleted}\r\n            value={task.isCompleted}\r\n            onChange={() => toggleTask(index)}\r\n        />\r\n        {task.text}\r\n            \r\n\r\n        </div>\r\n        <button onClick={()=>removeTask(index)}><FontAwesomeIcon icon={faTrash} /></button>\r\n        \r\n    </div>\r\n)\r\nexport default Todo;","import React,{useState} from 'react';\r\n\r\nimport styles from './InputForm.module.css';\r\nimport {Form } from 'react-bootstrap';\r\nconst InputForm=({addTask})=>{\r\n    const [value, setValue]=useState(\"\");\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        if (!value) return;\r\n        addTask(value);\r\n        setValue(\"\");\r\n    }\r\n    \r\n    return(\r\n    <div className={styles.inputform}>\r\n        <form onSubmit={handleSubmit} className={styles.input}>\r\n        <Form.Control size=\"lg\" type=\"text\" value={value} onChange={(e)=> setValue(e.target.value)}   />\r\n  <br />\r\n    \r\n        </form>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default InputForm;","import React from 'react';\r\nimport styles from'./Tracker.module.css';\r\n\r\nconst Tracker=(props)=>(\r\n    <div className={styles.tracker}>\r\n\r\n            <div>Total= {props.totalTasks}</div>\r\n            <div>Completed= {props.doneTasks}</div>\r\n            <div>Remaining= {props.totalTasks-props.doneTasks}</div>\r\n\r\n            \r\n            \r\n            \r\n    </div>\r\n\r\n)\r\nexport default Tracker;","import React, {useState} from 'react';\r\nimport styles from './Display.module.css';\r\nimport Todo from './Todo/Todo';\r\nimport InputForm from './InputForm/InputForm';\r\nimport Tracker from './Tracker'\r\nconst Display=(props)=>{\r\n    const [tasks, setTasks] = useState([\r\n        { text: \"Hello World\", isCompleted: false },\r\n        { text: \"Type your thoughts\", isCompleted: false },\r\n        { text: \"They will be stored permanently\", isCompleted: false }\r\n      ]);\r\n      const addTask=(text)=>{\r\n        const newTasks=[{text},...tasks];\r\n        setTasks(newTasks);\r\n      }\r\n      const removeTask=(index)=>{\r\n          const newTasks=[...tasks];\r\n          newTasks.splice(index,1);\r\n          setTasks(newTasks)\r\n      }\r\n      const toggleTask = (index) => {\r\n        const newTasks = [...tasks];\r\n        newTasks[index].isCompleted = !newTasks[index].isCompleted;\r\n        setTasks(newTasks);\r\n      };\r\n    return(\r\n        <div className={styles.display}>\r\n            \r\n            <InputForm addTask={addTask}/>\r\n            <Tracker  totalTasks={tasks.length}\r\n        doneTasks={tasks.filter((task) => task.isCompleted).length}/> \r\n            {\r\n                tasks.map((task,index)=>(\r\n                    <Todo\r\n                    key={index}\r\n                    index={index}\r\n                    task={task}\r\n                    removeTask={removeTask}\r\n                    toggleTask={toggleTask}\r\n                    />\r\n                ))\r\n            }\r\n            \r\n        </div>\r\n    );\r\n}\r\nexport default Display;","import React from 'react';\r\nimport styles from './Square.module.css';\r\nconst Square=(props)=>{ \r\n\r\n    return(\r\n    <button className={styles.square} onClick={props.clicked}>\r\n        {props.value}\r\n    </button>\r\n    )\r\n}\r\n\r\nexport default Square;","import React,{useState} from 'react';\r\nimport Square from './Square/Square';\r\nimport styles from './Tictac.module.css';\r\nimport {Container, Button} from 'react-bootstrap';\r\nconst Tictac = (props) => {\r\n    const [squares,setSquares]= useState(Array(9).fill(null));\r\n    //if true x turn else o turn\r\n    const [turn,setTurn]=useState(true);\r\n    function calculateWinner(squares) {\r\n        const lines = [\r\n          [0, 1, 2],\r\n          [3, 4, 5],\r\n          [6, 7, 8],\r\n          [0, 3, 6],\r\n          [1, 4, 7],\r\n          [2, 5, 8],\r\n          [0, 4, 8],\r\n          [2, 4, 6],\r\n        ];\r\n        for (let i = 0; i < lines.length; i++) {\r\n          const [a, b, c] = lines[i];\r\n          if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return squares[a];\r\n          }\r\n        }\r\n        return null;\r\n      }\r\n\r\n    const renderSquare=(i)=>{\r\n        return(\r\n            <Square value={squares[i]} clicked={()=>{handleClick(i)}}/>\r\n        )\r\n    };\r\n    const handleClick=(i)=>{\r\n        const square=squares.slice();\r\n        if (calculateWinner(square) || squares[i]){\r\n            return;\r\n        }\r\n        square[i]=turn? \"X\" : \"O\";\r\n        setTurn(!turn);\r\n        setSquares(square);\r\n    }\r\n    const newGame=()=>{\r\n        setSquares(Array(9).fill(null));\r\n        setTurn(true);\r\n    }\r\n    const winner = calculateWinner(squares);\r\n    let player;\r\n    if (winner) {\r\n      player = 'Winner: ' + winner;\r\n    } else {\r\n      player = 'Next player: ' + (turn ? 'X' : 'O');\r\n    }\r\n    return(\r\n        <Container className={styles.tictac}>\r\n            <div className={styles.player}>{player}</div>\r\n            <div className={styles.boardRow}>\r\n                {renderSquare(0)}{renderSquare(1)}{renderSquare(2)}\r\n            </div>\r\n            <div className={styles.boardRow}>\r\n                {renderSquare(3)}{renderSquare(4)}{renderSquare(5)}\r\n            </div>\r\n            <div className={styles.boardRow}>\r\n                {renderSquare(6)}{renderSquare(7)}{renderSquare(8)}\r\n            </div>\r\n            <Button size=\"lg\" onClick={newGame} className=\"mt-4 mx-auto px-5 py-3\" style={{backgroundColor:'rgb(52,58,64)',display:'flex',justifyContent:'center'}}>New Game</Button>\r\n        </Container> \r\n    )\r\n    \r\n}\r\nexport default Tictac;","import './App.css';\nimport Header from './components/Header/Header';\nimport Display from './components/Display/Display';\nimport Tictac from './components/Tictac/Tictac';\nimport {Route} from 'react-router-dom';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <Route exact path='/ToDoApp' component={Display}/>\n      <Route exact path='/ToDoApp/tictac' component={Tictac}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>\n,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}